for (int i = 0; i < response.length(); i++){
                            JSONObject jsonObject = new JSONObject(response);
                            if (jsonObject != null){
                                JSONArray routesArray = jsonObject.getJSONArray("routes");
                                if (routesArray != null){
                                    for (int j = 0; j < routesArray.length(); j++){
                                        JSONObject routesobj = routesArray.getJSONObject(i);
                                        if(routesobj != null){
                                            JSONArray legsArray = jsonObject.getJSONArray("legs");
                                            if (legsArray != null){
                                                for (int k = 0; k < routesArray.length(); k++){
                                                    JSONObject duration = jsonObject.getJSONObject("duration");
                                                    if (duration != null){
                                                        setEtadrive(Integer.parseInt(duration.getString("text")));
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }



    private void getLastKnownLocation() {
        Log.d(TAG, "getLastKnownLocation: called.");
        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
            return;
        }
        mFusedLocationClient.getLastLocation().addOnCompleteListener(new OnCompleteListener<android.location.Location>() {
            @Override
            public void onComplete(@NonNull Task<android.location.Location> task) {
                if (task.isSuccessful()) {
                    userLocation = task.getResult();
                    GeoPoint geoPoint = new GeoPoint(userLocation.getLatitude(), userLocation.getLongitude());
                    Log.d(TAG, "onComplete: latitude: " + geoPoint.getLatitude());
                    Log.d(TAG, "onComplete: longitude: " + geoPoint.getLongitude());

                }
            }
        });

    }

    @SuppressLint("MissingPermission")
    protected void getLocation() {

        LocationListener locationListener = new LocationListener() {
            @Override
            public void onLocationChanged(Location location) {

            }

            @Override
            public void onStatusChanged(String provider, int status, Bundle extras) {

            }

            @Override
            public void onProviderEnabled(String provider) {

            }

            @Override
            public void onProviderDisabled(String provider) {

            }
        };

        LocationManager locationManager = (LocationManager)  this.getSystemService(Context.LOCATION_SERVICE);
        Criteria criteria = new Criteria();
        String bestProvider = String.valueOf(locationManager.getBestProvider(criteria, true)).toString();

        //You can still do this if you like, you might get lucky:
        @SuppressLint("MissingPermission") Location location = locationManager.getLastKnownLocation(bestProvider);
        if (location != null) {
            Log.e("TAG", "GPS is on");
            Log.d(TAG, "onComplete: latitude: " + location.getLatitude());
            Log.d(TAG, "onComplete: longitude: " + location.getLongitude());
        }
        else{
            //This is what you need:
            locationManager.requestLocationUpdates(bestProvider,0,100,locationListener);
            userLocation = location;
        }


    }







    //        mFusedLocationClient = LocationServices.getFusedLocationProviderClient(this);
    //
    //
    //        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
    //            // TODO: Consider calling
    //            //    ActivityCompat#requestPermissions
    //            // here to request the missing permissions, and then overriding
    //            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
    //            //                                          int[] grantResults)
    //            // to handle the case where the user grants the permission. See the documentation
    //            // for ActivityCompat#requestPermissions for more details.
    //            return;
    //        }
    //        mFusedLocationClient.getLastLocation()
    //                .addOnSuccessListener(this, new OnSuccessListener<Location>() {
    //                    @Override
    //                    public void onSuccess(Location location) {
    //                        // Got last known location. In some rare situations this can be null.
    //                        if (location != null) {
    //
    //                            // Logic to handle location object
    //                        }
    //                    }
    //                });